#!/bin/sh
# A test variation with kill/restart after 1/2/4/8/ seconds etc

set -x

sixdir=$1
sixv=$2
dir=$3
BNL=""
LAHEY=""
echo "$sixv" | grep 'lf95' > /dev/null
if test $? -eq 0
then
  LAHEY="lf95"
fi
echo "$sixv" | grep 'bnl' > /dev/null
if test $? -eq 0
then
  BNL="bnl"
else
  TESTS=`echo $TESTS | sed -e's/bnl//'`
  echo "Ignoring TEST bnl as this executable does not handle bnlelens."
fi
BOINC=""
echo $sixv | grep 'boinc' >/dev/null
if test $? -eq 0
then
  BOINC="BOINC"
fi
CPSS=""
echo $sixv | grep 'cpss' >/dev/null
if test $? -eq 0
then
  CPSS="CPSS"
fi
date
echo "===================================="
echo "Testing Version $sixv in $sixdir"
echo "===================================="
echo "=== `hostname` ==="
egrep 'model name' /proc/cpuinfo | head -1
egrep 'cpu MHz' /proc/cpuinfo | head -1
egrep 'cache size' /proc/cpuinfo | head -1
esize=`size -d $sixdir/$sixv|sed -e'/dec/d' -e's/\t/ /g' -e's/  */ /'|cut -d" " -f1-4`
echo ""
echo "Size of $sixv $esize"
for i in $TESTS
do
  echo "===================================="
  echo "Testing CASE $i"
  echo "===================================="
  echo "=== $dir ==="
    echo "First time NO interrupts"
  rm -f fort.* *.dat
  for j in 2 3 8 16
  do
    cp ../$i/fort.$j fort.$j
  done
  if test "$i" = "bnl"
  then
    cp ../$i/beambeamdist.dat beambeamdist.dat
    cp beambeamdist.dat fort.54
  fi
  # Run once unkilled to get results for comparison
  date
  if test "$LAHEY" = ""
  then
    time $sixdir/$sixv
  else
    time $sixdir/$sixv -Wl,-p6,-m6 
  fi
  date
# Now handle Sixout.zip
  if test "$API" != ""
  then
    rm -rf fort.* stderr.txt
    echo "Sixout.zip `ls -l Sixout.zip`"
    echo "A" | unzip Sixout.zip
    if test $? -ne 0
    then
      echo "Problem with Sixout.zip!!!"
    fi
  fi
  egrep 'Computing Time|Total Time' fort.6
  cp fort.6 ../$i/fort.6.$dir
  cp fort.10 ../$i/fort.10.$dir
  if test -s fort.110
  then
    cp fort.110 ../$i/fort.110.$dir
  fi
  if test -s fort.210
  then
    cp fort.210 ../$i/fort.210.$dir
  fi
  if test -s fort.91
  then
    echo "Turns"
    cat fort.91
    echo "Restart log"
    cat fort.93
  fi
  if test "$i" = "bnl"
  then
    if test "$CPSS" != ""
    then
      cp fort.10 ../$i/title.dat.$dir
      cp fort.52 ../$i/beambeam-output.dat.$dir
      cp fort.53 ../$i/beambeam-lostID.dat.$dir
      cp fort.51 ../$i/SixTwiss.dat.$dir
      cp fort.97 ../$i/checkdist.dat.$dir
    elif test "$BOINC" != ""
    then
      egrep 'title     ' fort.10 > tmp$$
      sed -e's/title     //' tmp$$ > ../$i/title.dat.$dir
      egrep 'output    ' fort.10 > tmp$$
      sed -e's/output    //' tmp$$ > ../$i/beambeam-output.dat.$dir
      egrep 'lostID    ' fort.10 tmp$$ > tmp$$
      sed -e's/lostID    //' tmp$$ > ../$i/beambeam-lostID.dat.$dir
      egrep 'checkdist ' fort.10 > tmp$$
      sed -e's/checkdist //' tmp$$ > ../$i/checkdist.dat.$dir
      egrep 'SixTwiss  ' fort.10 > tmp$$
      sed -e's/SixTwiss  //' tmp$$ > ../$i/SixTwiss.dat.$dir
      rm tmp$$
    else
      cp fort.10 ../$i/title.dat.$dir
      cp beambeam-output.dat ../$i/beambeam-output.dat.$dir
      cp beambeam-lostID.dat ../$i/beambeam-lostID.dat.$dir
      cp SixTwiss.dat ../$i/SixTwiss.dat.$dir
      cp checkdist.dat ../$i/checkdist.dat.$dir
    fi
  fi
  echo "and all fort.* *.dat"
  ls *.dat > /dev/null 2>&1
  if test $? -eq 0
  then
    ls -l *.dat 
  fi
  ls -l fort.*
  echo "Completely finished $i uninterrupted 1st time."
  echo "===================================="
  echo "Trying restarts now $i"
  echo "===================================="
  # Remove all files including output and restart
  rm -f fort.* *.dat
  # and get inputs
  for j in 2 3 8 16
  do
    cp ../$i/fort.$j fort.$j
  done
  if test "$i" = "bnl"
  then
    cp ../$i/beambeamdist.dat beambeamdist.dat
    cp beambeamdist.dat fort.54
  fi
  myname="$sixdir/$sixv"
# but get rid of .exe!
  myname=`echo $myname | sed -e 's/\.exe//'`
  mysleep=1
  n=0
  date
  echo "Trying restarts: loop=$loops"
  if test "$LAHEY" = ""
  then
    time $sixdir/$sixv &
  else
    time $sixdir/$sixv -Wl,-p6,-m6 &
  fi
  ps -f
  ps -f| grep "$myname" > tmp$$
  sed -e'/grep/d' -e'/run_kill/d' tmp$$ > tmp2$$
  myproc=`cat tmp2$$`
  echo "myproc:$myproc"
  rm tmp$$ tmp2$$
  myproc=`echo $myproc | cut -d " " -f2`
  echo "SixTrack started Process No $myproc"
  running="true"
  while test $running = "true"
  do
    echo "Processes"
    ps -f
    ps -f| grep "$myname" > tmp$$
    sed -e'/grep/d' -e'/run_kill/d' tmp$$ > tmp2$$
    myproc=`cat tmp2$$`
    echo "myproc:$myproc"
    rm tmp$$ tmp2$$
    myproc=`echo $myproc | cut -d " " -f2`
    echo "Process No is $myproc"
    echo "Running - Sleeping $mysleep"
    sleep $mysleep
    if test "$mysleep" -lt "512"
    then
      mysleep=`expr $mysleep + $mysleep`
    fi
    echo "Processes"
    ps -f
    ps -f| grep "$myname" > tmp$$
    sed -e'/grep/d' -e'/run_kill/d' tmp$$ > tmp2$$
    myproc=`cat tmp2$$`
    echo "myproc:$myproc"
    rm tmp$$ tmp2$$
    myproc=`echo $myproc | cut -d " " -f2`
    if test "$myproc" != ""
    then
      echo "Process No is $myproc"
      echo "$myproc being killed"
      kill -9 $myproc
      sleep 3
      date
      echo "Restart files"
      ls -l fort.95 fort.96 
      echo "Restarting SixTrack"
      if test "$LAHEY" = ""
      then
        time $sixdir/$sixv &
      else
        time $sixdir/$sixv -Wl,-p6,-m6 &
      fi
      n=`expr $n + 1`
      echo "$i Restart number $n"
    else 
      echo "SixTrack finished!!!"
      date
# Now handle Sixout.zip
      if test "$API" != ""
      then
        rm -rf fort.* stderr.txt
        echo "Sixout.zip `ls -l Sixout.zip`"
        echo "A" | unzip Sixout.zip
        if test $? -ne 0
        then
          echo "Problem with Sixout.zip!!!"
        fi
      fi
      egrep 'Computing Time|Total Time' fort.6
      if test $? != 0
      then
        echo "CATASROPHIC !!! Maybe by SIGSEV!!!"
        echo "Restart files"
        ls -l fort.95 fort.96
        exit 99
      fi
      running="false"
    fi
  done
  date
  echo "Finished multiple restarts $i"
# Now handle Sixout.zip  (AGAIN? already did it above)
# if test "$API" != ""
# then
#   rm -rf fort.* stderr.txt
#   echo "Sixout.zip `ls -l Sixout.zip`"
#   echo "A" | unzip Sixout.zip
#   if test $? -ne 0
#   then
#     echo "Problem with Sixout.zip!!!"
#   fi
# fi
  egrep 'Computing Time|Total Time' fort.6
  diff fort.6 ../$i/fort.6.$dir
  if test "$i" != "bnl"
  then
    mkdir -p tmp$$
    cd tmp$$
    ln -s ../../$i/fort.10.$dir fort.20
    ln -s ../fort.10 fort.21
    $BIN/mychecktens
    cd ..
    rm -r tmp$$
  fi
  if test "$i" = "bnl"
  then
    if test "$CPSS" != ""
    then
      diff fort.10 ../$i/title.dat.$dir
      diff fort.52 ../$i/beambeam-output.dat.$dir
      diff fort.53 ../$i/beambeam-lostID.dat.$dir
      diff fort.51 ../$i/SixTwiss.dat.$dir
      diff fort.97 ../$i/checkdist.dat.$dir
    elif test "$BOINC" != ""
    then
      egrep 'title     ' fort.10 > tmp$$
      sed -e's/title     //' tmp$$ > title.dat
      diff title.dat ../$i/title.dat.$dir
      egrep 'output    ' fort.10 > tmp$$
      sed -e's/output    //' tmp$$ > beambeam-output.dat
      diff beambeam-output.dat ../$i/beambeam-output.dat.$dir
      egrep 'lostID    ' fort.10 tmp$$ > tmp$$
      sed -e's/lostID    //' tmp$$ > beambeam-lostID.dat
      diff beambeam-lostID.dat ../$i/beambeam-lostID.dat.$dir
      egrep 'checkdist ' fort.10 > tmp$$
      sed -e's/checkdist //' tmp$$ > checkdist.dat
      diff checkdist.dat ../$i/checkdist.dat.$dir
      egrep 'SixTwiss  ' fort.10 > tmp$$
      sed -e's/SixTwiss  //' tmp$$ > SixTwiss.dat
      diff SixTwiss.dat ../$i/SixTwiss.dat.$dir
      rm tmp$$
    else
      diff fort.10 ../$i/title.dat.$dir
      diff beambeam-output.dat ../$i/beambeam-output.dat.$dir
      diff beambeam-lostID.dat ../$i/beambeam-lostID.dat.$dir
      diff SixTwiss.dat ../$i/SixTwiss.dat.$dir
      diff checkdist.dat ../$i/checkdist.dat.$dir
    fi
  fi
  echo "Restart log"
  cat fort.93
  echo "and all fort.* *.dat"
  ls *.dat > /dev/null 2>&1
  if test $? -eq 0
  then
    ls -l *.dat 
  fi
  ls -l fort.*
done
